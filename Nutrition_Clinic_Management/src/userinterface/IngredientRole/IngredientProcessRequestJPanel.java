/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.IngredientRole;

import Business.WorkQueue.IngredientWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;

/**
 *
 * @author Anvita
 */
public class IngredientProcessRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form IngredientProcessRequestJPanel
     */
    JPanel userProcessContainer;
    IngredientWorkRequest request;
    private static Logger log = Logger.getLogger(IngredientProcessRequestJPanel.class);
    private static final String CLASS_NAME = IngredientProcessRequestJPanel.class.getName();
    public IngredientProcessRequestJPanel(JPanel userprocessContainer, IngredientWorkRequest request) {
        initComponents();
        this.userProcessContainer = userprocessContainer;
        this.request = request;
        dateFld.setMinSelectableDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processlbl = new javax.swing.JLabel();
        datedeliveryBtn = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        dateTxt = new javax.swing.JTextField();
        dateFld = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        processlbl.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        processlbl.setText("Processing  Food Supplier Request");
        add(processlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        datedeliveryBtn.setFont(new java.awt.Font("Nirmala UI", 0, 24)); // NOI18N
        datedeliveryBtn.setText("Select Date of Delivery");
        add(datedeliveryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        backBtn.setFont(new java.awt.Font("Nirmala UI", 0, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.setToolTipText("");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 100, -1));

        updateBtn.setFont(new java.awt.Font("Nirmala UI", 0, 24)); // NOI18N
        updateBtn.setText("update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 120, -1));
        add(dateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 130, -1));
        add(dateFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, 120, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
         request.setStatus("Completed");
        try{
        int year = dateFld.getCalendar().get(Calendar.YEAR);
        int month = dateFld.getCalendar().get(Calendar.MONTH);
        int day = dateFld.getCalendar().get(Calendar.DAY_OF_MONTH);
        String result = year + "-" + month + "-" + day;
        ((IngredientWorkRequest) request).setDeliveryTime(result);
        dateTxt.setText(result);
        JOptionPane.showMessageDialog(null, "Request has been updated");
        log.debug("request updated");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null , "enter a valid date");
            return;
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        IngredientWorkArea dwjp = (IngredientWorkArea) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private com.toedter.calendar.JDateChooser dateFld;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JLabel datedeliveryBtn;
    private javax.swing.JLabel processlbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
