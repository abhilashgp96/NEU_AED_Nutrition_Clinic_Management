/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.IngredientRole;

import Business.Enterprise.Enterprise;
import Business.Environment;
import Business.Network.Network;
import Business.Organization.IngredientOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.IngredientWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Anvita
 */
public class IngredientWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form IngredientWorkArea
     */
    private JPanel userProcessContainer;
    private Environment business;
    private UserAccount userAccount;
    private IngredientOrganization ingOrganization;
    private Enterprise enterprise;
    private Network network;
    private static Logger log = Logger.getLogger(IngredientWorkArea.class);
    private static final String CLASS_NAME = IngredientWorkArea.class.getName();

    public IngredientWorkArea(JPanel userProcessContainer, UserAccount userAccount, IngredientOrganization ingOrganization, Enterprise enterprise, Environment business, Network network) {
        initComponents();
         initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ingOrganization = ingOrganization;
        this.enterprise = enterprise;
        this.network = network;
        this.business = business;
        populateTable();
    }
     public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestTbl.getModel();
        model.setRowCount(0);

        for (WorkRequest request : ingOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[6];
            row[0] = ((IngredientWorkRequest) request);
            row[1] = ((IngredientWorkRequest) request).getQuantity();
            row[2] = request.getSender().getEmployee().getEmpName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getEmpName();
            row[4] = request.getStatus();
            row[5] = ((IngredientWorkRequest) request).getDeliveryTime();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dishFoodSupplierLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTbl = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();
        resfreshBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(230, 224, 224));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dishFoodSupplierLbl.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        dishFoodSupplierLbl.setText("Ingredient Supplier Work Area");
        add(dishFoodSupplierLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, -1));

        workRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DishFood Name", "Quantity", "Sender", "Receiver", "Status", "Delivery Time"
            }
        ));
        jScrollPane1.setViewportView(workRequestTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 710, 260));

        assignBtn.setBackground(new java.awt.Color(0, 0, 0));
        assignBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        assignBtn.setForeground(new java.awt.Color(255, 255, 255));
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, -1, -1));

        processBtn.setBackground(new java.awt.Color(0, 0, 0));
        processBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        processBtn.setForeground(new java.awt.Color(255, 255, 255));
        processBtn.setText("Process");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });
        add(processBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, 190, 40));

        resfreshBtn.setBackground(new java.awt.Color(0, 0, 0));
        resfreshBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        resfreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        resfreshBtn.setText("Refresh");
        resfreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resfreshBtnActionPerformed(evt);
            }
        });
        add(resfreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 180, 190, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        if (workRequestTbl.getValueAt(selectedRow, 4) != null) {

            if (((workRequestTbl.getValueAt(selectedRow, 4).equals("Completed")))) {

                JOptionPane.showMessageDialog(null, "Task is already completed");
                return;
            }
        }
        if (workRequestTbl.getValueAt(selectedRow, 4) != null) {

            if (workRequestTbl.getValueAt(selectedRow, 4).equals("Assigned")) {
                JOptionPane.showMessageDialog(null, "Task is already assigned");
                return;
            }
        }
        if (workRequestTbl.getValueAt(selectedRow, 3) != null) {

            if (!workRequestTbl.getValueAt(selectedRow, 3).equals(userAccount.getUsername())) {
                JOptionPane.showMessageDialog(null, "Task is already assigned");
                return;
            }
        }

        int flag = 0;
        for (WorkRequest request : ingOrganization.getWorkQueue().getWorkRequestList()) {

            if (request.getStatus() == null) {
                continue;
            }
            if (request.getStatus().equals("Assigned") && userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {
                flag = 1;
            }
        }
        if (flag == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing assigned request before proceeding further");
            return;

        }
        int flag1 = 0;
        for (WorkRequest request : ingOrganization.getWorkQueue().getWorkRequestList()) {

            if (request.getStatus() == null) {
                continue;
            }
            if (request.getStatus().equals("Processing") && userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {
                flag1 = 1;
            }
        }
        if (flag1 == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing request before proceeding to a new one");
            return;

        }

        WorkRequest request = (WorkRequest) workRequestTbl.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Assigned");
        populateTable();
        log.debug(userAccount+" "+"assigned a task to himself");
    }//GEN-LAST:event_assignBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        // TODO add your handling code here:
          int selectedRow = workRequestTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        IngredientWorkRequest request = (IngredientWorkRequest) workRequestTbl.getValueAt(selectedRow, 0);
        if (workRequestTbl.getValueAt(selectedRow, 4) != null) {

            if (((workRequestTbl.getValueAt(selectedRow, 4).equals("Completed")))) {

                JOptionPane.showMessageDialog(null, "Task is already completed");
                return;
            }
        }

        if (workRequestTbl.getValueAt(selectedRow, 4) == null) {
            JOptionPane.showMessageDialog(null, "Task is not assigned to you ");
            return;
        }
        int flag = 0;

        if (workRequestTbl.getValueAt(selectedRow, 4).equals("Processing") && userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {

            flag = 1;
        }
        if (flag != 1) {
            if (workRequestTbl.getValueAt(selectedRow, 4) != null) {

                if (!(((workRequestTbl.getValueAt(selectedRow, 4).equals("Assigned"))) && userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString()))) {
                    JOptionPane.showMessageDialog(null, "This Task is assigned to someone else to process");
                    return;
                }
            }
        }

        request.setStatus("Processing");

        IngredientProcessRequestJPanel processWorkRequestJPanel = new IngredientProcessRequestJPanel(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        log.debug(userAccount+" "+"processes the task");
    }//GEN-LAST:event_processBtnActionPerformed

    private void resfreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resfreshBtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_resfreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JLabel dishFoodSupplierLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton resfreshBtn;
    private javax.swing.JTable workRequestTbl;
    // End of variables declaration//GEN-END:variables
}
