/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DishFoodSupplier;

import Business.Ingredient.Ingredient;
import Business.Nutritionist.Patient;
import Business.Dish.Dish;
import Business.Environment;
import Business.Allergin.Allergin;
import Business.Network.Network;
import Business.Organization.DishFoodOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DishWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author soumya
 */
public class GenerateDishFoodNewDishFoodJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GenerateDishFoodNewDishFoodJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;
    private DishFoodOrganization dishFoodOrganization;
    private UserAccount userAccount;
    private Network network;
    private Environment business;
    private static Logger log = Logger.getLogger(GenerateDishFoodNewDishFoodJPanel.class);
    private static final String CLASS_NAME = GenerateDishFoodNewDishFoodJPanel.class.getName();

    public GenerateDishFoodNewDishFoodJPanel(JPanel userProcessContainer, Patient patient, DishFoodOrganization dishFoodOrganization, UserAccount userAccount, Network network,Environment business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.dishFoodOrganization = dishFoodOrganization;
        this.userAccount = userAccount;
        this.network = network;
        this.business = business;
        patientTxtField.setText(patient.getPatientFullName());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        newDishFoodTbl = new javax.swing.JTable();
        patientNameLbl = new javax.swing.JLabel();
        patientTxtField = new javax.swing.JTextField();
        resultLbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        addnewdishFoodBtn = new javax.swing.JButton();
        newDishFoodTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        newDishFoodTbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        newDishFoodTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergin", "Ingredient Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        newDishFoodTbl.setRowHeight(30);
        jScrollPane.setViewportView(newDishFoodTbl);

        add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 168, 650, 240));

        patientNameLbl.setFont(new java.awt.Font("Nirmala UI", 0, 24)); // NOI18N
        patientNameLbl.setText("Patient Name :");
        add(patientNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 99, 170, 30));

        patientTxtField.setFont(new java.awt.Font("Nirmala UI", 0, 24)); // NOI18N
        patientTxtField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        patientTxtField.setEnabled(false);
        add(patientTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 99, 294, 30));

        resultLbl.setFont(new java.awt.Font("Nirmala UI", 1, 48)); // NOI18N
        resultLbl.setText("New DishFood");
        add(resultLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 537, 170, -1));

        addnewdishFoodBtn.setBackground(new java.awt.Color(0, 0, 0));
        addnewdishFoodBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        addnewdishFoodBtn.setForeground(new java.awt.Color(255, 255, 255));
        addnewdishFoodBtn.setText("Add New DishFood");
        addnewdishFoodBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addnewdishFoodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnewdishFoodBtnActionPerformed(evt);
            }
        });
        add(addnewdishFoodBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, 260, 41));

        newDishFoodTxt.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        newDishFoodTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(newDishFoodTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, 267, 41));

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-dish-85 (1).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 160, 120));
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) newDishFoodTbl.getModel();

        List<String> newDeficiencyAllergins = new ArrayList<String>();
        for (Allergin allergin : patient.getAllerginHistory().getAllerginRecord()) {
            newDeficiencyAllergins.add(allergin.getAllerginName());
        }

        int i = 0;
        Map<String, String> AllerginIngridient = new TreeMap<String, String>((String.CASE_INSENSITIVE_ORDER));
        for (Dish d : business.getDishLst().getDishLst()) {

            for (i = 0; i < d.getIngredientLst().getIngLst().size(); i++) {

                Ingredient c = d.getIngredientLst().getIngLst().get(i);
                Allergin g = d.getAllergenRecord().getAllerginRecord().get(i);
                AllerginIngridient.put(g.getAllerginName(), c.getIngName());
            }

        }

        Map<String, String> newDishFoodFinal = new TreeMap<String, String>((String.CASE_INSENSITIVE_ORDER));
        for (String s : newDeficiencyAllergins) {

            if (AllerginIngridient.containsKey(s)) {

                newDishFoodFinal.put(s, AllerginIngridient.get(s));
            }
        }

        for (Map.Entry<String, String> entry : newDishFoodFinal.entrySet()) {
            String key = entry.getKey();
            String values = entry.getValue();
            Object[] row = new Object[2];
            row[0] = key;
            row[1] = values;
            model.addRow(row);
        }

    }
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LabResultsJpanel dwjp = (LabResultsJpanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addnewdishFoodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnewdishFoodBtnActionPerformed
        // TODO add your handling code here:
        String dishFoodName = newDishFoodTxt.getText().trim();
        if(dishFoodName.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the dishFood name");
            return;
        }
        ArrayList<String>dishFoodCheck = new ArrayList<>();
        for(Dish d:business.getDishLst().getDishLst())
        {
            dishFoodCheck.add(d.getDishFoodName().toLowerCase());
        }
        if(dishFoodCheck.contains(dishFoodName))
        {
             JOptionPane.showMessageDialog(null, " DishFood name already exists ");
            return;
        }
        Dish d = business.getDishLst().addDishLst();
        d.setDishFoodName(dishFoodName);
        patient.setNewDish(dishFoodName);
        int count = newDishFoodTbl.getRowCount();
        for (int i = 0; i < count; i++) {
            String s = newDishFoodTbl.getValueAt(i, 0).toString();
            d.getAllergenRecord().addAllerginLst().setAllerginName(s);
            String t = newDishFoodTbl.getValueAt(i, 1).toString();
            d.getIngredientLst().addNewIngLst().setIngName(t);

        }
        JOptionPane.showMessageDialog(null,"New DishFood is added succesfully");
        log.debug(userAccount+" "+"added new DishFood"+" "+dishFoodName);


    }//GEN-LAST:event_addnewdishFoodBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addnewdishFoodBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable newDishFoodTbl;
    private javax.swing.JTextField newDishFoodTxt;
    private javax.swing.JLabel patientNameLbl;
    private javax.swing.JTextField patientTxtField;
    private javax.swing.JLabel resultLbl;
    // End of variables declaration//GEN-END:variables
}
