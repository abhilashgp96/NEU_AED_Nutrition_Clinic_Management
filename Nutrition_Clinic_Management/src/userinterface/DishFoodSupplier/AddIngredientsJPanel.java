/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DishFoodSupplier;

import Business.Ingredient.Ingredient;
import Business.Dish.Dish;
import Business.Dish.DishDirectory;
import Business.Environment;
import Business.Enterprise.Enterprise;
import Business.Allergin.Allergin;
import Business.Network.Network;
import Business.Organization.DishFoodOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author soumya
 */
public class AddIngredientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddIngredientsJPanel
     */
    private Dish dish;
    private DishDirectory dishFoodList;
     private JPanel userProcessContainer;
    private Environment business;
    private UserAccount userAccount;
    private DishFoodOrganization dishFoodOrganization ;
    private Enterprise enterprise;
    private Object e;
    private static Logger log = Logger.getLogger(AddIngredientsJPanel.class);
    private static final String CLASS_NAME = AddIngredientsJPanel.class.getName();
    
    private Network network;
    public AddIngredientsJPanel(JPanel userProcessContainer,Environment business,UserAccount userAccount,DishFoodOrganization organization,Enterprise enterprise,Network network,Dish dish) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.dish = dish;
        this.dishFoodOrganization = (DishFoodOrganization)organization;
        populateTable();
    }
    
    public void populateTable(){
         DefaultTableModel model = (DefaultTableModel)ingredientAllergenTbl.getModel();
        
        model.setRowCount(0);
        Object[] row = new Object[2];
        int i = 0;
            for(Ingredient c : dish.getIngredientLst().getIngLst()){
                 
                 row[0] = c.getIngName();
                 
                    
                    Allergin g=  dish.getAllergenRecord().getAllerginRecord().get(i);
                      
                      row[1] = g.getAllerginName();
                      model.addRow(row);
                     i++;
                 }
                 
            
         
        
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientAllergenTbl = new javax.swing.JTable();
        ingredientTxt = new javax.swing.JTextField();
        AllerginTextField = new javax.swing.JTextField();
        ingredientLabel = new javax.swing.JLabel();
        allerginLabel = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        processlbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ingredientAllergenTbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        ingredientAllergenTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IngredientName", "AllerginName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ingredientAllergenTbl.setRowHeight(30);
        ingredientAllergenTbl.getTableHeader().setResizingAllowed(false);
        ingredientAllergenTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ingredientAllergenTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 630, 150));

        ingredientTxt.setFont(new java.awt.Font("Nirmala UI", 0, 20)); // NOI18N
        ingredientTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ingredientTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientTxtActionPerformed(evt);
            }
        });
        add(ingredientTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 357, 200, -1));

        AllerginTextField.setFont(new java.awt.Font("Nirmala UI", 0, 20)); // NOI18N
        AllerginTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(AllerginTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 423, 200, -1));

        ingredientLabel.setFont(new java.awt.Font("Nirmala UI", 1, 20)); // NOI18N
        ingredientLabel.setText("Ingredient");
        add(ingredientLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 361, -1, -1));

        allerginLabel.setFont(new java.awt.Font("Nirmala UI", 1, 20)); // NOI18N
        allerginLabel.setText("Allergin");
        add(allerginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 427, 150, -1));

        addBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        addBtn.setText("Add");
        addBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 524, 120, 40));

        backBtn.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        backBtn.setText(" Back");
        backBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 120, 40));

        processlbl.setFont(new java.awt.Font("Nirmala UI", 1, 48)); // NOI18N
        processlbl.setText("Dish and Ingredient Names");
        add(processlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, 70));

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-meal-64.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 110, 70));
    }// </editor-fold>//GEN-END:initComponents

    private void ingredientTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingredientTxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
         String ingredientName = ingredientTxt.getText().trim();
         String allerginName = AllerginTextField.getText().trim();
         if(ingredientName.isEmpty())
         {
             JOptionPane.showMessageDialog(null,"Please enter the ingredient name");
             return;
         }
         if(allerginName.isEmpty())
         {
             JOptionPane.showMessageDialog(null, "please enter the allergin name ");
             return;
         }
         ArrayList<String> ingredientCheck = new ArrayList<>();
         for(Ingredient c : dish.getIngredientLst().getIngLst())
         {
             ingredientCheck.add(c.getIngName().toLowerCase());
             
         }
         ArrayList<String>allergincheck= new ArrayList<>();
         for(Allergin g:dish.getAllergenRecord().getAllerginRecord())
         {
             allergincheck.add(g.getAllerginName().toLowerCase());
         }
         if(ingredientCheck.contains(ingredientName.toLowerCase()))
         {
             JOptionPane.showMessageDialog(null,"Ingredient already exists in the dishFood ");
             return;
             
         }
         if(allergincheck.contains(allerginName.toLowerCase()))
         {
          JOptionPane.showMessageDialog(null,"Allergin already exists in the dishFood ");
             return;   
         }
        dish.getIngredientLst().addNewIngredientLst().setIngName(ingredientName);
        dish.getAllergenRecord().addAllerginLst().setAllerginName(allerginName);
       
        populateTable();
        log.debug(userAccount+" "+"added ingredients and allergins to dishFood"+" "+dish);
        ingredientTxt.setText("");
        AllerginTextField.setText("");
    }//GEN-LAST:event_addBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AddDishFoodJPanel dwjp = (AddDishFoodJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AllerginTextField;
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel allerginLabel;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable ingredientAllergenTbl;
    private javax.swing.JLabel ingredientLabel;
    private javax.swing.JTextField ingredientTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel processlbl;
    // End of variables declaration//GEN-END:variables
}
